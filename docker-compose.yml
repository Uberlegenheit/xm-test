version: '3.9'

services:
  kafka:
    image: confluentinc/cp-kafka:6.0.14
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:9092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8085:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.14
    ports:
      - '22181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000


  postgres-db:
    image: postgres:${POSTGRES_VERSION}
    hostname: ${DOCKER_CONTAINER_NAME}
    container_name: ${DOCKER_CONTAINER_NAME}
    restart: always
    env_file: .env
    ports:
      - '0.0.0.0:5432:5432/tcp'
    shm_size: '256mb'
    logging:
      options:
        max-size: '12m'
        max-file: '5'
      driver: json-file
    depends_on:
      - zookeeper

  xm-back:
    image: ${IMAGE}
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${NAME}
    hostname: ${NAME}
    restart: always
    env_file: .env
    working_dir: /app
    ports:
      - '127.0.0.1:${LISTEN_PORT}:${LISTEN_PORT}'
    entrypoint: ["cli"]
    depends_on:
      - postgres-db
